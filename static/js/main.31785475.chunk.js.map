{"version":3,"sources":["action/actionType.js","action/actionCreator.js","components/Search.jsx","function/index.js","components/Weather.jsx","data/index.js","App.js","components/reducer/citiesReducer.js","components/reducer/reducer.js","components/reducer/index.js","index.js"],"names":["actionType","findCity","name","dispatch","a","axios","get","then","response","data","type","payload","catch","err","Search","useState","isClicked","setIsClicked","useDispatch","value","useRef","useEffect","current","focus","SearchSection","action","onSubmit","e","preventDefault","ref","onClick","styled","div","switchBackground","Weather","Holder","Situation","background","newCity","weather","main","Math","round","temp","Details","description","temp_min","temp_max","humidity","Date","getMilliseconds","toString","cities","App","useSelector","state","reducer","searchData","citiesReducer","i","setInterval","Container","isActive","className","Wrapper","setMilliseconds","initialState","cityName","searchReducer","alert","base","clouds","all","cod","coord","lon","lat","dt","id","feels_like","pressure","sys","country","sunrise","sunset","timezone","visibility","icon","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","myStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.31785475.chunk.js","sourcesContent":["export const actionType = {\n    FIND_CITY : \"FIND_CITY\" ,\n    ERR : \"ERR\"  , \n    SEARCH_CITY : \"SEARCH_CITY\" , \n    CLOSE_CITY : \"CLOSE_CITY\" ,\n    NOT_FOUND : \"NOT_FOUND\"\n}","import axios from \"axios\";\nimport { actionType } from \"./actionType\";\n\n\nexport const findCity = (name)=> async (dispatch)=> {\n   \n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${name}%20&appid=2e4972913fa314ab861a493a42896c52`)\n    .then(response => {\n        const data = response.data\n        dispatch({type : actionType.FIND_CITY , payload : data})     \n    })\n    .catch(err => {\n        return {\n            type : actionType.ERR , payload : \"you have an err\"\n        }\n    })\n    \n}\n\nexport const searchCity = (name) => async (dispatch) => {\n    await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${name}%20&appid=2e4972913fa314ab861a493a42896c52`)\n    .then(response => {\n        dispatch({type : actionType.SEARCH_CITY , payload : {name , data : response.data}})\n        \n    }).catch((err) => {\n        dispatch({type : actionType.NOT_FOUND , payload : \" we couldn't find your city\"})\n    });\n}\n\nexport const closeCity = (dispatch)=> {\n    dispatch({type : actionType.CLOSE_CITY})\n}\n// 'https://fakestoreapi.com/products/1\n// https://api.openweathermap.org/data/2.5/weather?q=${name}%20&appid=2e4972913fa314ab861a493a42896c52","import React from 'react'\nimport { useState , useRef , useEffect} from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\nimport { searchCity } from '../action/actionCreator'\nimport '../index.css'\nconst Search = () => {\n    const [isClicked ,setIsClicked]= useState(false)\n    const dispatch =  useDispatch()\n    const value = useRef()\n    const submitHandler = (e)=> {\n        e.preventDefault()\n        setIsClicked(false)\n        dispatch(searchCity(value.current.value))\n\n    }\n    useEffect(() => {\n       isClicked && value.current.focus()\n       \n    }, [isClicked])\n    \n    return (\n        <SearchSection>\n            {isClicked ?\n            <form action=\"#\" onSubmit={submitHandler}>\n            <input type=\"text\" ref={value}/>\n            <button type='submit'>search</button>\n            </form> : \n            <div onClick={()=> setIsClicked(true)}>search for a city</div>\n            }\n            \n        </SearchSection>\n    )\n}\n\nexport default Search\n\n\nconst SearchSection =styled.div`\n    width: 100vw;\n    height: 150px;\n    display: flex;\n    justify-content: center;\n    form{\n        width: 100vw;\n        display: flex;\n        justify-content: center;\n        padding-top: 20px;\n        animation : fadeIn 0.5s ;\n        input{\n            height: 30px;\n            width: 60%;\n            max-width: 400px;\n            min-width: 200px;\n            border-radius: 20px;\n            border: 2px solid rgba(235,235,140,1);\n            padding-left: 10px;\n            :focus{\n                outline: none;\n            }\n        }\n        button{\n            height: 28px;\n            padding: 0 15px;\n            margin: 1px 0 0 10px;\n            border: none;\n            border-radius: 10px;\n            background-color: #0b20e2;\n            color: #fbfbfb;\n            font-size:0.8rem;\n            font-weight: 600;\n            text-transform: uppercase;\n            cursor: pointer;\n            \n        }\n    }\n        div{\n        width: 350px;\n        height: 100px;\n        display: flex;\n        align-items: center;\n        justify-content: center ;\n        border: 1px solid black;\n        border-radius: 30px;\n        margin-top: 20px;\n        background: #4636d4;\n        color: white;\n        font-size: 1.5rem;\n        cursor: pointer;\n        :hover{\n            background: rgba(0 , 0 ,0 , 0.8);\n            \n        }\n        @media screen and (max-width:500px){\n            width: 250px;\n            height: 60px;\n            font-size: 1rem;\n            border-radius: 20px;\n        }\n    }\n    \n`","export const switchBackground = (data) => {\n   switch (data) {\n       case \"Clouds\":\n           return \"url('./img/clouds.jpg')\"\n       case \"Clear\":\n           return \"url('./img/clear.jpg')\"\n       case \"Rain\":\n           return \"url('./img/rain.jpg')\"\n       case \"Snow\":\n           return \"url('./img/snow.jpeg')\"\n       case \"Haze\":\n           return \"url('./img/haze.jpeg')\"\n           \n       default:\n           return \"url('./img/clear.jpg')\"\n   }\n }","import React from 'react'\nimport styled from 'styled-components'\nimport { switchBackground } from '../function'\nimport { Flip } from 'react-reveal'\nimport '../index.css'\n\n\nconst Weather = ({data} ) => {\n  \n  \n  \n    return (\n        <Holder key={new Date().getMilliseconds().toString()}>\n          <Situation background={switchBackground(data.newCity.weather[0].main)}>\n            <h3>{data.newCity.name}</h3>\n            <h2>{Math.round(data.newCity.main.temp -272.15)} &#8451; </h2>\n          </Situation>\n          <hr />\n            <Details >\n                <p>weather <span >{data.newCity.weather[0].description}</span></p>\n                <hr />\n                <p>min temperature <span >{Math.round(data.newCity.main.temp_min -272.15) } &#8451;  </span></p>\n                <hr />\n                <p>max temerature <span >{Math.round(data.newCity.main.temp_max -272.15)} &#8451; </span></p>\n                <hr />\n                <p>humidity <span >{data.newCity.main.humidity} %</span></p>\n            </Details>\n        </Holder>\n    )\n}\n\nexport default Weather\n\n\nconst Holder = styled.div`\n    max-width: 400px;\n    min-width: 200px;\n    width: 90%;\n    height: 400px;\n    margin-bottom: 50px;\n    background: #f0f0f0;\n    border-radius: 20px;\n    color: black;\n    animation : rotate 0.7s ;\n    \n\n`\nconst Situation =styled.div`\n    background:${({background}) => background};\n    background-size:cover;\n    background-repeat: no-repeat;\n    border-radius: 20px 20px 0 0;\n    height: 50%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    justify-content: space-around;\n`\nconst Details =styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    hr{\n        width: 100%;\n    }\n    p{\n        padding: 13px 0 13px 0;\n        width: 90%;\n        color: #3f3f3f;\n        text-transform : capitalize;\n\n        \n        span{\n            float: right\n        }\n    }\n`","export const cities = [\"london\" , \"dubai\" , \"moscow\" , \"tehran\"]","import React ,{useEffect} from 'react'\nimport styled from 'styled-components'\nimport Search from './components/Search'\nimport Weather from './components/Weather'\nimport { findCity } from './action/actionCreator'\nimport { cities } from './data'\nimport { useDispatch ,useSelector } from 'react-redux'\nimport { actionType } from './action/actionType'\n\nfunction App() {\n  const  dispatch = useDispatch()\n  const  data = useSelector(state => state.reducer)\n  const searchData = useSelector(state => state.citiesReducer)\n\n  const closeSearch =()=>{\n    dispatch({type : actionType.CLOSE_CITY})\n  }\n  useEffect(() => {\n    let i = 0\n    dispatch(findCity(cities[i]))\n    \n    setInterval(() => {\n      i++\n      if (i>=4) {\n        i = 0\n      }\n      dispatch(findCity(cities[i]))\n      \n    }, 7000);\n  }, [])\n  return (\n    <Container>\n      {searchData.isActive && <div className='absolute-weather'>\n        <span onClick={closeSearch} className='close'>&#10006;</span>\n        <Weather data={searchData}/>\n      </div>}\n      <Search />\n      <Wrapper>\n        <Weather data={data} key={new Date().setMilliseconds().toString()}/>\n      </Wrapper>\n    </Container>\n  )\n}\n\nexport default App\n\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url('./img/background.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  div.absolute-weather{\n    position: absolute;\n    background-color: rgba(0,0,0,0.9);\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    z-index : 10;\n    backdrop-filter: blur(8px);\n    span.close{\n      color: whitesmoke;\n      font-size: 1.5rem;\n      background-color: rgba(253,253,253,0.3);\n      padding: 12px 15px; \n      border-radius: 50%;\n      cursor: pointer;\n      margin-bottom: 35px;\n      :hover{\n        background-color: rgba(253,253,253,0.7);\n      }\n    }\n    \n  }\n\n`\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  justify-content: space-around;\n  position: relative;\n  button{\n    position: absolute;\n    top: 15%;\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    font-size: 1.5rem;\n    background-color: rgba(0 ,0 ,0 ,0.4);\n    border:none;\n    color: whitesmoke;\n    :hover{\n      background:rgba(0 ,0 ,0 ,0.9);\n      color: whitesmoke;\n      cursor: pointer;\n    }\n  }\n  button.next-btn{\n    right: 10%;\n  }\n  button.previous-btn{\n    left: 10%\n  }\n`","import { actionType } from \"../../action/actionType\";\n\nconst initialState = {\n    isActive : false , \n    cityName : \"\"\n}\nconst searchReducer = (state=initialState , action) => {\n\n    switch (action.type) {\n        case actionType.SEARCH_CITY:\n            return {...state ,isActive : true , cityName : action.payload.name , newCity : action.payload.data }\n            \n        case actionType.CLOSE_CITY : \n            return {...state , isActive : false}\n            \n        case actionType.NOT_FOUND : \n        alert(action.payload)\n        return state\n        default:\n            return state\n            \n    }\n    \n}\n \n\nexport default searchReducer","import { actionType } from \"../../action/actionType\";\n\nconst initialState={newCity :{ base: \"stations\",\nclouds: {all: 0},\ncod: 200,\ncoord: {lon: 55.3047, lat: 25.2582},\ndt: 1638990693,\nid: 292223,\nmain: {temp: 294.24, feels_like: 293.45, temp_min: 290.31, temp_max: 295.11, pressure: 1019, },\nname: \"Dubai\",\nsys: {type: 1, id: 7537, country: 'AE', sunrise: 1638931940, sunset: 1638970157},\ntimezone: 14400,\nvisibility: 10000,\nweather:[{id: 800, main: 'Clear', description: 'clear sky', icon: '01n'}]}}\n\n\nconst reducer = (state = initialState, action)=>{\n    switch (action.type) {\n        case actionType.FIND_CITY:\n            const newCity = action.payload\n            return {...state , newCity}\n        case actionType.ERR :\n            return state\n        default:\n            return state\n           \n    }\n}\n\nexport default reducer","import { combineReducers } from \"redux\";\nimport citiesReducer from \"./citiesReducer\";\nimport reducer from \"./reducer\";\nconst rootReducer = combineReducers({\n    reducer : reducer ,\n    citiesReducer : citiesReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from 'redux'\nimport { Provider } from 'react-redux';\nimport rootReducer from './components/reducer';\nimport { applyMiddleware } from 'redux';\nimport { compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst myStore = createStore(rootReducer ,composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider  store={myStore}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}